{
	"type":"unit",
	"name":"fighter",
	"faction":"empire",
	"grade":1,
	"structure":2,
	"shield":0,
	"damage":2,
	"level":2,
	"file":"fighters01"
}
{
	"type":"unit",
	"name":"heavy_fighter",
	"faction":"empire",
	"grade":3,
	"structure":2,
	"shield":0,
	"damage":3,
	"level":2,
	"file":"fighters02"
}
{
	"type":"unit",
	"name":"bomber",
	"faction":"empire",
	"grade":3,
	"structure":1,
	"shield":1,
	"damage":4,
	"level":2,
	"effects":
	[
		{
			"name":"REDUCE_DAMAGE_1-SELF-ATTACK",
			"icon":"attack_down_1",
			"rule":"REDUCE_DAMAGE_1-SELF-ATTACK_DESC",
			"script":"
				func on_attack(target):
					self.damage = max(self.damage-1,0)"
		},
		{
			"script":"
				func on_bombard(target):
					self.damage = max(self.damage-1,0)"
		}
	],
	"file":"bomber"
}
{
	"type":"unit",
	"name":"corvette",
	"faction":"empire",
	"grade":1,
	"structure":4,
	"shield":1,
	"damage":4,
	"level":4,
	"file":"corvette"
}
{
	"type":"unit",
	"name":"missile_frigate",
	"faction":"empire",
	"grade":2,
	"structure":4,
	"shield":1,
	"damage":6,
	"level":4,
	"effects":
	[
		{
			"name":"REDUCE_DAMAGE_1-SELF-ATTACK",
			"icon":"attack_down_1",
			"rule":"REDUCE_DAMAGE_1-SELF-ATTACK_DESC",
			"script":"
				func on_attack(target):
					self.damage = max(self.damage-1,0)"
		},
		{
			"script":"
				func on_bombard(target):
					self.damage = max(self.damage-1,0)"
		}
	],
	"file":"missile_frigate"
}
{
	"type":"unit",
	"name":"destroyer",
	"faction":"empire",
	"grade":1,
	"structure":4,
	"shield":1,
	"damage":6,
	"level":5,
	"file":"destroyer"
}
{
	"type":"unit",
	"name":"cruiser",
	"faction":"empire",
	"grade":1,
	"structure":6,
	"shield":2,
	"damage":6,
	"level":6,
	"file":"cruiser"
}
{
	"type":"unit",
	"name":"assault_carrier",
	"faction":"empire",
	"grade":3,
	"structure":7,
	"shield":2,
	"damage":7,
	"level":6,
	"file":"assault_carrier"
}
{
	"type":"unit",
	"name":"carrier",
	"faction":"empire",
	"grade":1,
	"structure":8,
	"shield":3,
	"damage":6,
	"level":7,
	"file":"carrier"
}
{
	"type":"unit",
	"name":"battleship",
	"faction":"empire",
	"grade":3,
	"structure":9,
	"shield":3,
	"damage":7,
	"level":8,
	"file":"battleship"
}
{
	"type":"unit",
	"name":"planetary_defense_network",
	"faction":"empire",
	"grade":2,
	"structure":7,
	"shield":0,
	"damage":6,
	"level":5,
	"movement_points":0,
	"attack_points":0,
	"effects":
	[
		{
			"name":"UNMOVEABLE",
			"icon":"movement0",
			"rule":"UNMOVEABLE_DESC"
		},
		{
			"name":"NO_ATTACK",
			"icon":"attack0",
			"rule":"NO_ATTACK_DESC"
		},
		{
			"name":"COUNTERATTACK",
			"icon":"counter",
			"rule":"COUNTERATTACK_DESC",
			"script":"
				func on_attacked(target):
					var card = Main.cards[self.enemy][target]
					var pi = load('res://scenes/effects/planetary_defense.tscn').instance()
					var pos = self.node.get_global_position()
					pi.set_scale(Vector2(1,pos.distance_to(card.node.get_global_position())/800.0))
					pi.set_global_position(pos)
					pi.set_rotation(pos.angle_to_point(card.node.get_global_position())-PI/2.0)
					Main.add_child(pi)
					card.structure -= max(self.damage-card.shield,0)"
		}
	],
	"file":"planetary_defense"
}
{
	"type":"unit",
	"name":"factory",
	"faction":"empire",
	"grade":1,
	"structure":5,
	"shield":1,
	"damage":1,
	"cards":2,
	"level":4,
	"movement_points":0,
	"effects":
	[
		{
			"name":"UNMOVEABLE",
			"icon":"movement0",
			"rule":"UNMOVEABLE_DESC"
		},
		{
			"name":"DRAW_2",
			"icon":"cards_2",
			"rule":"DRAW_2_DESC",
			"script":"
				func on_spawn():
					Main.draw_cards(self.owner,2)"
		}
	],
	"file":"factory"
}
{
	"type":"unit",
	"name":"repair_ship",
	"faction":"empire",
	"grade":2,
	"structure":5,
	"shield":1,
	"damage":0,
	"level":4,
	"effects":
	{
		"name":"DRYDOCK",
		"icon":"repair_2",
		"rule":"DRYDOCK_DESC",
		"script":"
			func on_next_turn(player):
				if (player!=self.owner):
					return
				for target in range(floor(self.position/Main.POSITIONS)*Main.POSITIONS,(floor(self.position/Main.POSITIONS)+1)*Main.POSITIONS):
					var card = Main.cards[self.player][target]
					if (card!=null):
						var max_structure = Data.data[card.type,'structure']
						if (card.structure<max_structure):
							card.node.add_child(load('res://scenes/effects/repair03.tscn').instance())
							card.structure = min(card.structure+2,max(max_structure,card.structure))"
	},
	"file":"repair03"
}
{
	"type":"unit",
	"name":"heavy_bomber",
	"faction":"empire",
	"grade":2,
	"structure":4,
	"shield":1,
	"damage":3,
	"level":4,
	"effects":
	{
		"name":"BOMBARDMENT_2",
		"icon":"bombardment_2",
		"rule":"BOMBARDMENT_2_DESC",
		"script":"
			func on_bombard(target):
				Main.field[target].structure -= 2"
	},
	"file":"heavy_bomber"
}
{
	"type":"effect",
	"name":"long_range_torpedos",
	"faction":"empire",
	"grade":1,
	"damage":6,
	"level":4,
	"effects":
	{
		"name":"DIRECT_DAMAGE_6",
		"icon":"damage_6",
		"rule":"DIRECT_DAMAGE_6_DESC",
		"script":"
			func on_use(target):
				var card = Main.cards[self.enemy][target]
				card.structure -= max(6-card.shield,0)
				card.node.add_child(load('res://scenes/effects/torpedo.tscn').instance())",
		"target":"enemy_unit"
	},
	"file":"torpedo"
}
{
	"type":"effect",
	"name":"draw_3",
	"faction":"empire",
	"grade":2,
	"cards":3,
	"level":5,
	"effects":
	{
		"name":"DRAW_3",
		"icon":"cards_3",
		"rule":"DRAW_3_DESC",
		"script":"
			func on_spawn():
				Main.draw_cards(self.owner,3)"
	},
	"file":""
}
{
	"type":"effect",
	"name":"upgrade_weapons",
	"faction":"empire",
	"grade":1,
	"damage":2,
	"level":2,
	"effects":
	{
		"name":"INCREASE_DAMAGE_2",
		"icon":"attack_up_2",
		"rule":"INCREASE_DAMAGE_2_DESC",
		"script":"
			func on_use(target):
				var card = Main.cards[self.owner][target]
				card.damage += 2
				card.node.add_child(load('res://scenes/effects/upg_weapon.tscn').instance())",
		"target":"ally_unit"
	},
	"file":"upg_weapon"
}
{
	"type":"effect",
	"name":"armor_plating",
	"faction":"empire",
	"grade":1,
	"structure":2,
	"level":2,
	"effects":
	{
		"name":"ARMOR_2",
		"icon":"armor_up_2",
		"rule":"ARMOR_2_DESC",
		"script":"
			func on_use(target):
				var card = Main.cards[self.owner][target]
				card.structure += 2
				card.node.add_child(load('res://scenes/effects/upg_armor.tscn').instance())",
		"target":"ally_unit"
	},
	"file":"upg_armor"
}
{
	"type":"effect",
	"name":"upgrade_shields",
	"faction":"empire",
	"grade":1,
	"shield":1,
	"level":2,
	"effects":
	{
		"name":"SHIELD_1",
		"icon":"shield_up_1",
		"rule":"SHIELD_1_DESC",
		"script":"
			func on_use(target):
				var card = Main.cards[self.owner][target]
				card.shield += 1
				card.node.add_child(load('res://scenes/effects/upg_shield.tscn').instance())",
		"target":"ally_unit"
	},
	"file":"upg_shield"
}
{
	"type":"effect",
	"name":"repair_4",
	"faction":"empire",
	"grade":1,
	"structure":4,
	"level":2,
	"effects":
	{
		"name":"REPAIR_4",
		"icon":"repair_4",
		"rule":"REPAIR_4_DESC",
		"script":"
			func on_use(target):
				var card = Main.cards[self.owner][target]
				var max_structure = Data.data[card.type]['structure']
				card.structure = min(card.structure+4,max(max_structure,card.structure))
				card.node.add_child(load('res://scenes/effects/repair01.tscn').instance())",
		"target":"ally_unit"
	},
	"file":"repair01"
}
{
	"type":"effect",
	"name":"planetary_defense_6",
	"faction":"empire",
	"grade":2,
	"structure":6,
	"level":3,
	"effects":
	{
		"name":"DEFENSE_6",
		"icon":"repair_6",
		"rule":"DEFENSE_6_DESC",
		"script":"
			func on_use(target):
				var card = Main.field[target]
				card.structure += 6",
		"target":"ally_planet"
	},
	"file":""
}
{
	"type":"planet",
	"name":"factory_world",
	"faction":"empire",
	"grade":1,
	"level":4,
	"effects":
	[
		{
			"name":"CHEAP",
			"icon":"cheap",
			"rule":"CHEAP_DESC",
			"script":"
				func on_spawn():
					self.level = 0
					self.points['empire'] = 2
					Main.player_points[self.owner]['empire'] += 2
					Main.player_used_points[self.owner]['empire'] += 2"
		},
		{
			"name":"PRODUCTION_2",
			"icon":"points_2",
			"rule":"PRODUCTION_2_DESC"
		}
	],
	"file":""
}
{
	"type":"planet",
	"name":"planetary_barrier",
	"faction":"empire",
	"grade":1,
	"shield":1,
	"level":2,
	"effects":
	{
		"name":"SHIELD_1",
		"icon":"shield_up_1",
		"rule":"SHIELD_1_DESC",
		"script":"
			func on_use(target):
				Main.field[target].shield += 1",
		"target":"ally_planet"
	},
	"file":"planetary_barrier"
}
{
	"type":"planet",
	"name":"orbital_mine_field",
	"faction":"empire",
	"grade":2,
	"damage":1,
	"level":3,
	"effects":
	{
		"name":"MINES_1",
		"icon":"mines",
		"rule":"MINES_1_PLANET_DESC",
		"script":"
			func on_next_turn(player):
				if (player!=self.owner):
					return
				for target in range(self.position*Main.POSITIONS,(self.position+1)*Main.POSITIONS):
					var card = Main.cards[enemy][target]
					if (card!=null):
						card.node.add_child(load('res://scenes/effects/mine.tscn').instance())
						card.structure -= 1"
	},
	"file":""
}
{
	"type":"planet",
	"name":"orbital_drydock",
	"faction":"empire",
	"grade":2,
	"level":3,
	"effects":
	{
		"name":"DRYDOCK",
		"icon":"repair_2",
		"rule":"DRYDOCK_DESC",
		"script":"
			func on_next_turn(player):
				if (player!=self.owner):
					return
				for target in range(self.position*Main.POSITIONS,(self.position+1)*Main.POSITIONS):
					var card = Main.cards[self.player][target]
					if (card!=null):
						var max_structure = Data.data[card.type]['structure']
						if (card.structure<max_structure):
							card.node.add_child(load('res://scenes/effects/repair03.tscn').instance())
							card.structure = min(card.structure+2,max(max_structure,card.structure))"
	},
	"file":"orbital_drydock"
}
